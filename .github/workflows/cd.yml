name: OKDOSE CD

on:
  push:
    branches:
      - main
      - develop

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.DAPP_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.DAPP_AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.DAPP_AWS_REGION }}
      SOURCE_DIR: 'tail-ui/build'
      PATHS: "/*"

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 8.17.0
      
      - name: "Install dependencies"
        run: npm install

      - name: "Clean the build"
        run: npm run build:clean

      - name: "Install the project"
        run: npm ci

      - name: "Build the project"
        run: npm run build

      - name: Deploy to production if branch is release
        if: github.ref == 'refs/heads/release'
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.DAPP_AWS_S3_PROD_BUCKET }}

      - name: Invalidate Production CloudFront
        if: github.ref == 'refs/heads/release'
        uses: chetan/invalidate-cloudfront-action@v2
        env:
          DISTRIBUTION: ${{ secrets.DAPP_PROD_DISTRIBUTION }}
          
      - name: Deploy to staging if branch is main
        if: github.ref == 'refs/heads/main'
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.DAPP_AWS_S3_STAGING_BUCKET }}

      - name: Invalidate Staging CloudFront
        if: github.ref == 'refs/heads/main'
        uses: chetan/invalidate-cloudfront-action@v2
        env:
          DISTRIBUTION: ${{ secrets.DAPP_STAGING_DISTRIBUTION }}
